.PHONY: all setup clean i686 i686-setup i686-clean i686-compile-asm i686-recompile-asm i686-compile-c i686-link i686-relink x86_64 x86_64-setup x86_64-clean x86_64-compile-asm x86_64-recompile-asm x86_64-compile-c x86_64-link x86_64-relink

ANY_DIR_BUILD = build

ANY_DIR_SOURCE = src
ANY_DIR_SOURCE_ASM = ${ANY_DIR_SOURCE}/asm
ANY_DIR_SOURCE_C = ${ANY_DIR_SOURCE}/c

ANY_DIRS_INCLUDE_ASM = ${ANY_DIR_SOURCE_ASM}
ANY_DIRS_INCLUDE_C = ${ANY_DIR_SOURCE_C}

all: i686 x86_64

setup:
	set -e
	mkdir -p ${ANY_DIR_BUILD}

clean:
	rm -rf ${ANY_DIR_BUILD}

I686_DIR_BUILD = ${ANY_DIR_BUILD}/i686
I686_DIR_BUILD_ASM = ${I686_DIR_BUILD}/asm
I686_DIR_BUILD_C = ${I686_DIR_BUILD}/c

I686_DIRS_INCLUDE_ASM = ${ANY_DIRS_INCLUDE_ASM} ${I686_DIR_BUILD_ASM}
I686_DIRS_INCLUDE_C = ${ANY_DIRS_INCLUDE_C}

i686: i686-setup i686-link i686-relink

i686-setup: setup i686-clean
	mkdir ${I686_DIR_BUILD}
	mkdir ${I686_DIR_BUILD_ASM}
	mkdir ${I686_DIR_BUILD_C}

i686-clean:
	rm -rf ${I686_DIR_BUILD}

I686_COMPILE_ASM_SOURCES_ASM = $(patsubst ${ANY_DIR_SOURCE_ASM}/%.asm, %, $(wildcard ${ANY_DIR_SOURCE_ASM}/*.asm))

I686_COMPILE_ASM_FLAGS_COMMON = -f elf32
I686_COMPILE_ASM_FLAGS_INCLUDE = $(addprefix -I , $(wordlist 1, $(words ${I686_DIRS_INCLUDE_ASM}), ${I686_DIRS_INCLUDE_ASM}))

I686_COMPILE_ASM_PATTERN_SOURCE_ASM = ${ANY_DIR_SOURCE_ASM}/${name}.asm
I686_COMPILE_ASM_PATTERN_BUILD_ASM = ${I686_DIR_BUILD_ASM}/${name}.bin

i686-compile-asm:
	$(foreach name, ${I686_COMPILE_ASM_SOURCES_ASM}, \
	nasm ${I686_COMPILE_ASM_FLAGS_COMMON} ${I686_COMPILE_ASM_FLAGS_INCLUDE} ${I686_COMPILE_ASM_PATTERN_SOURCE_ASM} -o ${I686_COMPILE_ASM_PATTERN_BUILD_ASM};)

I686_RECOMPILE_ASM_SOURCES_ASM = ${I686_COMPILE_ASM_SOURCES_ASM}

I686_RECOMPILE_ASM_FLAGS_COMMON = ${I686_COMPILE_ASM_FLAGS_COMMON}
I686_RECOMPILE_ASM_FLAGS_INCLUDE = ${I686_COMPILE_ASM_FLAGS_INCLUDE}

I686_RECOMPILE_ASM_PATTERN_SOURCE_ASM = ${I686_COMPILE_ASM_PATTERN_SOURCE_ASM}
I686_RECOMPILE_ASM_PATTERN_BUILD_ASM = ${I686_COMPILE_ASM_PATTERN_BUILD_ASM}

i686-recompile-asm:
	$(foreach name, ${I686_RECOMPILE_ASM_SOURCES_ASM}, \
	nasm ${I686_RECOMPILE_ASM_FLAGS_COMMON} ${I686_RECOMPILE_ASM_FLAGS_INCLUDE} ${I686_RECOMPILE_ASM_PATTERN_SOURCE_ASM} -o ${I686_RECOMPILE_ASM_PATTERN_BUILD_ASM};)

I686_COMPILE_C_SOURCES_C = $(patsubst ${ANY_DIR_SOURCE_C}/%.c, %, $(wildcard ${ANY_DIR_SOURCE_C}/*.c))

I686_COMPILE_C_FLAGS_COMMON = -O0 -std=gnu99 -ffreestanding -Wall
I686_COMPILE_C_FLAGS_INCLUDE = $(addprefix -I , $(wordlist 1, $(words ${I686_DIRS_INCLUDE_C}), ${I686_DIRS_INCLUDE_C}))

I686_COMPILE_C_PATTERN_SOURCE_C = ${ANY_DIR_SOURCE_C}/${name}.c
I686_COMPILE_C_PATTERN_BUILD_C = ${I686_DIR_BUILD_C}/${name}.o

i686-compile-c:
	$(foreach name, ${I686_COMPILE_C_SOURCES_C}, \
	i686-elf-gcc ${I686_COMPILE_C_FLAGS_COMMON} ${I686_COMPILE_C_FLAGS_INCLUDE} -c ${I686_COMPILE_C_PATTERN_SOURCE_C} -o ${I686_COMPILE_C_PATTERN_BUILD_C};)

I686_LINK_FILE_SCRIPT = i686.ld

I686_LINK_FLAGS_COMMON = -nostdlib

I686_LINK_PATTERN_BUILD_ASM = ${I686_DIR_BUILD_ASM}/*.bin
I686_LINK_PATTERN_BUILD_C = ${I686_DIR_BUILD_C}/*.o

I686_LINK_FILE_OUTPUT = ${I686_DIR_BUILD}/bootloader.bin

i686-link: i686-compile-asm i686-compile-c
	i686-elf-gcc -T ${I686_LINK_FILE_SCRIPT} ${I686_LINK_FLAGS_COMMON} $(wildcard ${I686_LINK_PATTERN_BUILD_ASM}) $(wildcard ${I686_LINK_PATTERN_BUILD_C}) -o ${I686_LINK_FILE_OUTPUT}

I686_RELINK_FILE_SCRIPT = ${I686_LINK_FILE_SCRIPT}

I686_RELINK_FLAGS_COMMON = ${I686_LINK_FLAGS_COMMON}

I686_RELINK_PATTERN_BUILD_ASM = ${I686_LINK_PATTERN_BUILD_ASM}
I686_RELINK_PATTERN_BUILD_C = ${I686_LINK_PATTERN_BUILD_C}

I686_RELINK_FILE_OUTPUT = ${I686_LINK_FILE_OUTPUT}

i686-relink: i686-recompile-asm i686-compile-c
	i686-elf-gcc -T ${I686_RELINK_FILE_SCRIPT} ${I686_RELINK_FLAGS_COMMON} $(wildcard ${I686_RELINK_PATTERN_BUILD_ASM}) $(wildcard ${I686_RELINK_PATTERN_BUILD_C}) -o ${I686_RELINK_FILE_OUTPUT}

X86_64_DIR_BUILD = ${ANY_DIR_BUILD}/x86_64
X86_64_DIR_BUILD_ASM = ${X86_64_DIR_BUILD}/asm
X86_64_DIR_BUILD_C = ${X86_64_DIR_BUILD}/c

X86_64_DIRS_INCLUDE_ASM = ${ANY_DIRS_INCLUDE_ASM} ${X86_64_DIR_BUILD_ASM}
X86_64_DIRS_INCLUDE_C = ${ANY_DIRS_INCLUDE_C}

x86_64: x86_64-setup x86_64-link x86_64-relink

x86_64-setup: setup x86_64-clean
	mkdir ${X86_64_DIR_BUILD}
	mkdir ${X86_64_DIR_BUILD_ASM}
	mkdir ${X86_64_DIR_BUILD_C}

x86_64-clean:
	rm -rf ${X86_64_DIR_BUILD}

X86_64_COMPILE_ASM_SOURCES_ASM = $(patsubst ${ANY_DIR_SOURCE_ASM}/%.asm, %, $(wildcard ${ANY_DIR_SOURCE_ASM}/*.asm))

X86_64_COMPILE_ASM_FLAGS_COMMON = -f elf64
X86_64_COMPILE_ASM_FLAGS_INCLUDE = $(addprefix -I , $(wordlist 1, $(words ${X86_64_DIRS_INCLUDE_ASM}), ${X86_64_DIRS_INCLUDE_ASM}))

X86_64_COMPILE_ASM_PATTERN_SOURCE_ASM = ${ANY_DIR_SOURCE_ASM}/${name}.asm
X86_64_COMPILE_ASM_PATTERN_BUILD_ASM = ${X86_64_DIR_BUILD_ASM}/${name}.bin

x86_64-compile-asm:
	$(foreach name, ${X86_64_COMPILE_ASM_SOURCES_ASM}, \
	nasm ${X86_64_COMPILE_ASM_FLAGS_COMMON} ${X86_64_COMPILE_ASM_FLAGS_INCLUDE} ${X86_64_COMPILE_ASM_PATTERN_SOURCE_ASM} -o ${X86_64_COMPILE_ASM_PATTERN_BUILD_ASM};)

X86_64_RECOMPILE_ASM_SOURCES_ASM = ${X86_64_COMPILE_ASM_SOURCES_ASM}

X86_64_RECOMPILE_ASM_FLAGS_COMMON = ${X86_64_COMPILE_ASM_FLAGS_COMMON}
X86_64_RECOMPILE_ASM_FLAGS_INCLUDE = ${X86_64_COMPILE_ASM_FLAGS_INCLUDE}

X86_64_RECOMPILE_ASM_PATTERN_SOURCE_ASM = ${X86_64_COMPILE_ASM_PATTERN_SOURCE_ASM}
X86_64_RECOMPILE_ASM_PATTERN_BUILD_ASM = ${X86_64_COMPILE_ASM_PATTERN_BUILD_ASM}

x86_64-recompile-asm:
	$(foreach name, ${X86_64_RECOMPILE_ASM_SOURCES_ASM}, \
	nasm ${X86_64_RECOMPILE_ASM_FLAGS_COMMON} ${X86_64_RECOMPILE_ASM_FLAGS_INCLUDE} ${X86_64_RECOMPILE_ASM_PATTERN_SOURCE_ASM} -o ${X86_64_RECOMPILE_ASM_PATTERN_BUILD_ASM};)

X86_64_COMPILE_C_SOURCES_C = $(patsubst ${ANY_DIR_SOURCE_C}/%.c, %, $(wildcard ${ANY_DIR_SOURCE_C}/*.c))

X86_64_COMPILE_C_FLAGS_COMMON = -O0 -std=gnu99 -ffreestanding -Wall
X86_64_COMPILE_C_FLAGS_INCLUDE = $(addprefix -I , $(wordlist 1, $(words ${X86_64_DIRS_INCLUDE_C}), ${X86_64_DIRS_INCLUDE_C}))

X86_64_COMPILE_C_PATTERN_SOURCE_C = ${ANY_DIR_SOURCE_C}/${name}.c
X86_64_COMPILE_C_PATTERN_BUILD_C = ${X86_64_DIR_BUILD_C}/${name}.o

x86_64-compile-c:
	$(foreach name, ${X86_64_COMPILE_C_SOURCES_C}, \
	x86_64-elf-gcc ${X86_64_COMPILE_C_FLAGS_COMMON} ${X86_64_COMPILE_C_FLAGS_INCLUDE} -c ${X86_64_COMPILE_C_PATTERN_SOURCE_C} -o ${X86_64_COMPILE_C_PATTERN_BUILD_C};)

X86_64_LINK_FILE_SCRIPT = x86_64.ld

X86_64_LINK_FLAGS_COMMON = -nostdlib

X86_64_LINK_PATTERN_BUILD_ASM = ${X86_64_DIR_BUILD_ASM}/*.bin
X86_64_LINK_PATTERN_BUILD_C = ${X86_64_DIR_BUILD_C}/*.o

X86_64_LINK_FILE_OUTPUT = ${X86_64_DIR_BUILD}/bootloader.bin

x86_64-link: x86_64-compile-asm x86_64-compile-c
	x86_64-elf-gcc -T ${X86_64_LINK_FILE_SCRIPT} ${X86_64_LINK_FLAGS_COMMON} $(wildcard ${X86_64_LINK_PATTERN_BUILD_ASM}) $(wildcard ${X86_64_LINK_PATTERN_BUILD_C}) -o ${X86_64_LINK_FILE_OUTPUT}

X86_64_RELINK_FILE_SCRIPT = ${X86_64_LINK_FILE_SCRIPT}

X86_64_RELINK_FLAGS_COMMON = ${X86_64_LINK_FLAGS_COMMON}

X86_64_RELINK_PATTERN_BUILD_ASM = ${X86_64_LINK_PATTERN_BUILD_ASM}
X86_64_RELINK_PATTERN_BUILD_C = ${X86_64_LINK_PATTERN_BUILD_C}

X86_64_RELINK_FILE_OUTPUT = ${X86_64_LINK_FILE_OUTPUT}

x86_64-relink: x86_64-recompile-asm x86_64-compile-c
	x86_64-elf-gcc -T ${X86_64_RELINK_FILE_SCRIPT} ${X86_64_RELINK_FLAGS_COMMON} $(wildcard ${X86_64_RELINK_PATTERN_BUILD_ASM}) $(wildcard ${X86_64_RELINK_PATTERN_BUILD_C}) -o ${X86_64_RELINK_FILE_OUTPUT}