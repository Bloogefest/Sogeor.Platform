.PHONY: all clean setup build define-asm-include compile-asm compile-c link redefine-asm-include recompile-asm relink

PATH_SOURCE = $(CURDIR)
PATH_SOURCE_ASM = ${PATH_SOURCE}/asm
PATH_SOURCE_C = ${PATH_SOURCE}/c

PATH_BUILD = ../../build/intel64
PATH_BUILD_BIN = ${PATH_BUILD}/bin
PATH_BUILD_ASM = ${PATH_BUILD}/asm
PATH_BUILD_C = ${PATH_BUILD}/c

PATH_LIST_INCLUDE_ASM = ${PATH_SOURCE_ASM} ${PATH_BUILD_ASM}
PATH_LIST_INCLUDE_C = ${PATH_SOURCE_C}

all: clean build

clean:
	set -e
	rm -rf ${PATH_BUILD}

setup:
	set -e
	mkdir -p ${PATH_BUILD}
	mkdir -p ${PATH_BUILD_BIN}
	mkdir -p ${PATH_BUILD_ASM}
	mkdir -p ${PATH_BUILD_C}

build: relink

DEFINE_ASM_INCLUDE_FILE = ${PATH_BUILD_ASM}/include.asm

define-asm-include: setup
	printf "%%define NUMBER_OF_SECTORS 0" > ${DEFINE_ASM_INCLUDE_FILE}

COMPILE_ASM_SOURCE_LIST_ASM = $(patsubst ${PATH_SOURCE_ASM}/%.asm, %, $(wildcard ${PATH_SOURCE_ASM}/*.asm))

COMPILE_ASM_FLAG_LIST_COMMON = -f elf32
COMPILE_ASM_FLAG_LIST_INCLUDE = $(addprefix -I , $(wordlist 1, $(words ${PATH_LIST_INCLUDE_ASM}), ${PATH_LIST_INCLUDE_ASM}))

COMPILE_ASM_PATTERN_SOURCE = ${PATH_SOURCE_ASM}/${name}.asm
COMPILE_ASM_PATTERN_BUILD = ${PATH_BUILD_ASM}/${name}.bin

compile-asm: define-asm-include
	$(foreach name, ${COMPILE_ASM_SOURCE_LIST_ASM}, \
	nasm ${COMPILE_ASM_FLAG_LIST_COMMON} ${COMPILE_ASM_FLAG_LIST_INCLUDE} ${COMPILE_ASM_PATTERN_SOURCE} -o ${COMPILE_ASM_PATTERN_BUILD};)

COMPILE_C_SOURCE_LIST = $(patsubst ${PATH_SOURCE_C}/%.c, %, $(wildcard ${PATH_SOURCE_C}/*.c))

COMPILE_C_FLAG_LIST_COMMON = -O0 -std=gnu17 -ffreestanding -Wall
COMPILE_C_FLAG_LIST_INCLUDE = $(addprefix -I , $(wordlist 1, $(words ${DIRS_INCLUDE_C}), ${DIRS_INCLUDE_C}))

COMPILE_C_PATTERN_SOURCE = ${PATH_SOURCE_C}/${name}.c
COMPILE_C_PATTERN_BUILD = ${PATH_BUILD_C}/${name}.o

compile-c:
	$(foreach name, ${COMPILE_C_SOURCE_LIST}, \
	i686-elf-gcc ${COMPILE_C_FLAG_LIST_COMMON} ${COMPILE_C_FLAG_LIST_INCLUDE} -c ${COMPILE_C_PATTERN_SOURCE} -o ${COMPILE_C_PATTERN_BUILD};)

LINK_PATH_SCRIPT = ${PATH_SOURCE}/default.ld

LINK_FLAG_LIST_COMMON = -nostdlib

LINK_BUILD_LIST_ASM = $(wildcard ${PATH_BUILD_ASM}/*.bin)
LINK_BUILD_LIST_C = $(wildcard ${PATH_BUILD_C}/*.o)
LINK_BUILD_LIST_C2 = $(patsubst ${PATH_BUILD_C}/lifecycle.o, , $(wildcard ${PATH_BUILD_C}/*.o)) ${PATH_BUILD_C}/lifecycle.o

LINK_BIN_BOOTLOADER_FILE = ${PATH_BUILD_BIN}/bootloader.bin

link: compile-asm compile-c
	i686-elf-gcc -T ${LINK_PATH_SCRIPT} ${LINK_FLAG_LIST_COMMON} ${LINK_BUILD_LIST_ASM} ${LINK_BUILD_LIST_C} -o ${LINK_BIN_BOOTLOADER_FILE}

REDEFINE_BIN_BOOTLOADER_FILE = ${LINK_BIN_BOOTLOADER_FILE}
REDEFINE_ASM_INCLUDE_FILE = ${DEFINE_ASM_INCLUDE_FILE}

redefine-asm-include: link
	printf "%%define NUMBER_OF_SECTORS %s" $(shell expr $(shell expr $(shell wc -c < ${REDEFINE_BIN_BOOTLOADER_FILE}) + 511) / 512) > ${REDEFINE_ASM_INCLUDE_FILE}

RECOMPILE_ASM_SOURCE_LIST = ${COMPILE_ASM_SOURCE_LIST_ASM}

RECOMPILE_ASM_FLAG_LIST_COMMON = ${COMPILE_ASM_FLAG_LIST_COMMON}
RECOMPILE_ASM_FLAG_LIST_INCLUDE = ${COMPILE_ASM_FLAG_LIST_INCLUDE}

RECOMPILE_ASM_PATTERN_SOURCE = ${COMPILE_ASM_PATTERN_SOURCE}
RECOMPILE_ASM_PATTERN_BUILD = ${COMPILE_ASM_PATTERN_BUILD}

recompile-asm: redefine-asm-include
	$(foreach name, ${RECOMPILE_ASM_SOURCE_LIST}, \
	nasm ${RECOMPILE_ASM_FLAG_LIST_COMMON} ${RECOMPILE_ASM_FLAG_LIST_INCLUDE} ${RECOMPILE_ASM_PATTERN_SOURCE} -o ${RECOMPILE_ASM_PATTERN_BUILD};)

RELINK_PATH_SCRIPT = ${LINK_PATH_SCRIPT}

RELINK_FLAG_LIST_COMMON = ${LINK_FLAG_LIST_COMMON}

RELINK_BUILD_LIST_ASM = ${LINK_BUILD_LIST_ASM}
RELINK_BUILD_LIST_C = ${LINK_BUILD_LIST_C}

RELINK_BIN_BOOTLOADER_FILE = ${LINK_BIN_BOOTLOADER_FILE}

relink: recompile-asm
	i686-elf-gcc -T ${RELINK_PATH_SCRIPT} ${RELINK_FLAG_LIST_COMMON} ${RELINK_BUILD_LIST_ASM} ${RELINK_BUILD_LIST_C} -o ${RELINK_BIN_BOOTLOADER_FILE}